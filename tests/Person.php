<?php

declare(strict_types=1);

/**
 * @project Ekklesion
 * @link https://github.com/castor-labs/ekklesion
 * @package castor/ekklesion
 * @author Matias Navarro-Carter mnavarrocarter@gmail.com
 * @license MIT
 * @copyright 2021 CastorLabs Ltd
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Castor\Tabloid;

use Castor\Tabloid\Metadata\Attr\Column as Col;
use Castor\Tabloid\Metadata\Attr\Table;
use DateTimeImmutable;
use Castor\Tabloid\Engine\MySQL;

/**
 * Person is an example entity that uses a traditional autoincrement id.
 * It is important to test the lifecycle of these types of entities as retrieving
 * the id from the database upon insertion is crucial for the correct working
 * of the object tracker.
 */
#[Table('people')]
class Person
{
    #[Col(MySQL\TInteger::class, Col::PRIMARY_KEY | Col::AUTOGENERATED)]
    private int $id = 0;
    #[Col(MySQL\TString::class)]
    private string $name;
    #[Col(MySQL\TInteger::class)]
    private int $age;
    #[Col(MySQL\TBoolean::class)]
    private bool $enabled;
    #[Col(MySQL\TString::class, Col::NULLABLE)]
    private ?string $accountId;
    #[Col(MySQL\TDateTimeImmutable::class)]
    private DateTimeImmutable $createdAt;

    /**
     * @param string $name
     * @param int $age
     */
    public function __construct(string $name, int $age)
    {
        $this->name = $name;
        $this->age = $age;
        $this->enabled = true;
        $this->createdAt = new DateTimeImmutable();
        $this->accountId = null;
    }

    /**
     * @return int
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * @return string
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * @return int
     */
    public function getAge(): int
    {
        return $this->age;
    }

    /**
     * @return bool
     */
    public function isEnabled(): bool
    {
        return $this->enabled;
    }

    /**
     * @return string|null
     */
    public function getAccountId(): ?string
    {
        return $this->accountId;
    }

    public function addAccount(string $accountId): void
    {
        $this->accountId = $accountId;
    }

    /**
     * @return DateTimeImmutable
     */
    public function getCreatedAt(): DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function incrementAge(): void
    {
        $this->age++;
    }
}
